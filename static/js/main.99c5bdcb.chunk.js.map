{"version":3,"sources":["components/Navigation.tsx","features/house/houseSlice.ts","components/ReponsiveSquare.tsx","styles/keyframes.ts","styles/common.ts","styles/themes.ts","features/house/Houses.tsx","features/theme/themeSlices.ts","features/sortingHat/sortingHatSlices.ts","features/sortingHat/sortingHatStyles.ts","components/LoadingContainer.tsx","features/sortingHat/SortingHat.tsx","App.tsx","app/modules/root.ts","app/configureStore.ts","app/store.ts","services/potterapi.ts","serviceWorker.ts","styles/global.ts","index.tsx"],"names":["styles","navigation","css","link","theme","colors","primary","Navigation","label","to","map","index","key","houseSlice","createSlice","name","initialState","houses","error","reducers","fetchHousesFulfilled","state","action","payload","fetchHousesRejected","fetchHouses","actions","selectHouses","house","selectHousesError","squareStyle","innerStyle","ResponsiveSquare","children","width","innerCss","floating","keyframes","rotating","row","value","rotatingKeyframes","fontHarryP","defaultTheme","secondary","accent","accentDark","textWhite","textBlack","textPrimary","background","gryffindor","ravenclaw","hufflepuff","slytherin","withTheme","args","arg","default","full","wrapper","houseLink","Houses","useSelector","dispatch","useDispatch","React","useEffect","_id","themes","themeSlice","setTheme","Ravenclaw","Slytherin","Hufflepuff","Gryffindor","selectTheme","sortingHatSlice","isLoading","setSortingHat","setIsLoading","setSortingHatAsync","selectSortingHat","sortingHat","selectSortingHatIsLoading","button","LoadingContainer","props","minHeight","wrapperStyle","fontSize","SortingHat","onClick","App","AppLogo","AppHeader","path","rootEpic","combineEpics","action$","state$","potterapi","pipe","ofType","type","switchMapTo","concat","of","defer","getSortingHat","mergeMap","throttleTime","getHouses","catchError","rootReducer","combineReducers","sortingHatReducer","themeReducer","houseReducer","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","epicDependencies","epicMiddleware","createEpicMiddleware","dependencies","createStore","applyMiddleware","run","configureStore","this","process","fetch","response","ok","json","Error","status","Boolean","location","hostname","match","ReactDOM","render","StrictMode","global","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.99c5bdcb.chunk.js","sourcesContent":["/** @jsx jsx */\nimport { css, jsx } from \"@emotion/core\";\n\nimport { NavLink } from \"react-router-dom\";\n\nimport { Theme } from \"styles/themes\";\n\nconst styles = {\n  navigation: css`\n    display: flex;\n  `,\n  link: (theme: Theme) => css`\n    margin: 0 12px;\n    padding: 8px 0;\n    color: ${theme.colors.primary[0]};\n  `,\n};\n\nconst Navigation = () => {\n  const links = [\n    {\n      label: \"Sorting Hat\",\n      to: \"/sorting-hat\",\n    },\n    {\n      label: \"Houses\",\n      to: \"/houses\",\n    },\n  ];\n\n  return (\n    <ul css={styles.navigation}>\n      {links.map((link, index) => (\n        <li key={index}>\n          <NavLink css={styles.link} to={link.to}>\n            {link.label}\n          </NavLink>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nexport default Navigation;\n","import { PayloadAction, createSlice } from \"@reduxjs/toolkit\";\n\nimport { Epic, ofType } from \"redux-observable\";\nimport { defer, of } from \"rxjs\";\nimport { catchError, map, switchMapTo, throttleTime } from \"rxjs/operators\";\n\nimport { Dependencies, RootState } from \"app/store\";\n\nimport { House } from \"services/potterapi\";\n\ninterface HouseState {\n  houses: House[];\n  error: Error | null;\n}\n\nconst initialState: HouseState = {\n  houses: [],\n  error: null,\n};\n\nexport const houseSlice = createSlice({\n  name: \"house\",\n  initialState,\n  reducers: {\n    fetchHousesFulfilled: (state, action: PayloadAction<House[]>) => {\n      state.houses = action.payload;\n      state.error = null;\n    },\n    fetchHousesRejected: (state, action: PayloadAction<Error>) => {\n      state.houses = [];\n      state.error = action.payload;\n    },\n    fetchHouses: () => {},\n  },\n});\n\nexport const {\n  fetchHousesFulfilled,\n  fetchHouses,\n  fetchHousesRejected,\n} = houseSlice.actions;\n\nexport const fetchHousesEpic: Epic = (\n  action$,\n  state$,\n  { potterapi }: Dependencies\n) =>\n  action$.pipe(\n    ofType(fetchHouses.type),\n    throttleTime(1000),\n    switchMapTo(\n      defer(() => potterapi.getHouses()).pipe(\n        map((value) => fetchHousesFulfilled(value)),\n        catchError((error) => of(fetchHousesRejected(error)))\n      )\n    )\n  );\n\nexport const selectHouses = (state: RootState) => state.house.houses;\n\nexport const selectHousesError = (state: RootState) => state.house.error;\n\nexport default houseSlice.reducer;\n","/** @jsx jsx */\nimport { Interpolation, css, jsx } from \"@emotion/core\";\n\nconst squareStyle = css`\n  display: inline-flex;\n  position: relative;\n`;\n\nconst innerStyle = css`\n  position: absolute;\n  top: 0;\n  left: 0;\n`;\n\ninterface ResponsiveSquareProps {\n  children: React.ReactNode;\n  width?: string;\n  innerCss?: Interpolation;\n}\n\nfunction ResponsiveSquare({\n  children,\n  width = \"100%\",\n  innerCss = css``,\n}: ResponsiveSquareProps) {\n  return (\n    <div\n      css={[\n        squareStyle,\n        css`\n          width: ${width};\n          padding-top: ${width};\n          /* TODO: mobile 50% */\n        `,\n      ]}\n    >\n      <div css={[innerStyle, innerCss]}>{children}</div>\n    </div>\n  );\n}\n\nexport default ResponsiveSquare;\n","import { keyframes } from \"@emotion/core\";\n\nexport const floating = keyframes`\n  0% {\n    transform: translateY(0);\n  }\n  50% {\n    transform: translateY(10px)\n  }\n  100% {\n    transform: translateY(0px)\n  }\n  `;\n\nexport const rotating = keyframes`\n  from {\n    transform: rotate(0deg);\n  }\n  to {\n    transform: rotate(360deg);\n  }\n`;\n","import { css } from \"@emotion/core\";\n\nimport { rotating as rotatingKeyframes } from \"./keyframes\";\nimport { Theme } from \"./themes\";\n\nexport const button = (theme: Theme) => css`\n  label: button;\n  appearance: none;\n  background: none;\n  font-size: 32px;\n  padding-left: 12px;\n  padding-right: 12px;\n  outline: none;\n  border: 2px solid transparent;\n  color: ${theme.colors.textWhite[0]};\n  padding-bottom: 4px;\n  cursor: pointer;\n  background-color: ${theme.colors.primary[0]};\n  border-radius: 2px;\n  transition: all 0.15s;\n  &:hover,\n  &:focus {\n    border: 2px solid ${theme.colors.secondary[0]};\n  }\n  &:active {\n    background-color: ${theme.colors.accent};\n  }\n`;\n\nexport const row = css`\n  label: row;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  &:not(:last-child) {\n    margin-bottom: 16px;\n  }\n`;\n\nexport const value = css`\n  label: value;\n  font-size: 78px;\n  padding-left: 16px;\n  padding-right: 16px;\n  margin-top: 2px;\n  font-family: \"Courier New\", Courier, monospace;\n`;\n\nexport const rotating = css`\n  animation: ${rotatingKeyframes} 2s linear infinite;\n`;\n\nexport const fontHarryP = css`\n  font-family: HarryP;\n`;\n","import { SerializedStyles } from \"@emotion/core\";\n\nimport { HouseName } from \"services/potterapi\";\n\ninterface ThemeColor {\n  primary: string[];\n  secondary: string[];\n  accent: string[];\n  accentDark: string[];\n  textWhite: string[];\n  textBlack: string[];\n  textPrimary: string[];\n  background: string[];\n}\n\nexport interface Theme {\n  colors: ThemeColor;\n}\n\nconst defaultTheme: Theme = {\n  colors: {\n    primary: [\"#555555\"],\n    secondary: [\"#333333\"],\n    accent: [\"#000050\"],\n    accentDark: [\"#121212\"],\n    textWhite: [\"#ffffff\"],\n    textBlack: [\"#000000\"],\n    textPrimary: [\"#ffffff\"],\n    background: [\"#fafafa\"],\n  },\n};\n\nconst gryffindor: Theme = {\n  colors: {\n    ...defaultTheme.colors,\n    primary: [\"#740001\"],\n    secondary: [\"#ae0001\"],\n    accent: [\"#eeba30\"],\n    accentDark: [\"#d3a625\"],\n  },\n};\n\nconst ravenclaw: Theme = {\n  colors: {\n    ...defaultTheme.colors,\n    primary: [\"#0e1a40\"],\n    secondary: [\"#222f5b\"],\n    accent: [\"#5d5d5d\"],\n    accentDark: [\"#946b2d\"],\n  },\n};\n\nconst hufflepuff: Theme = {\n  colors: {\n    ...defaultTheme.colors,\n    primary: [\"#ecb939\"],\n    secondary: [\"#f0c75e\"],\n    accent: [\"#726255\"],\n    accentDark: [\"#372e29\"],\n  },\n};\n\nconst slytherin: Theme = {\n  colors: {\n    ...defaultTheme.colors,\n    primary: [\"#284d16\"],\n    secondary: [\"#1d3c0e\"],\n    accent: [\"#42473f\"],\n    accentDark: [\"#232721\"],\n  },\n};\n\n// Fixed in emotion 11 (https://github.com/emotion-js/emotion/issues/1606)\n// css={withTheme([(theme) => {}, {}])} => css={[(theme) => {}, {}]}\nexport const withTheme = (\n  args: Array<SerializedStyles | ((theme: Theme) => SerializedStyles)>\n) => {\n  return (theme: Theme) => [\n    ...args.map((arg) => {\n      if (typeof arg === \"function\") {\n        return arg(theme);\n      }\n      return arg;\n    }),\n  ];\n};\n\nexport const getThemeByHouse = (house: HouseName) =>\n  ({\n    Ravenclaw: ravenclaw,\n    Slytherin: slytherin,\n    Hufflepuff: hufflepuff,\n    Gryffindor: gryffindor,\n  }[house]);\n\nexport default {\n  default: defaultTheme,\n  gryffindor,\n  ravenclaw,\n  hufflepuff,\n  slytherin,\n};\n","/** @jsx jsx */\nimport { css, jsx } from \"@emotion/core\";\nimport React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport { fetchHouses, selectHouses, selectHousesError } from \"./houseSlice\";\n\nimport ResponsiveSquare from \"components/ReponsiveSquare\";\nimport { fontHarryP } from \"styles/common\";\nimport { Theme, withTheme } from \"styles/themes\";\n\nconst styles = {\n  full: css`\n    width: 100%;\n    height: 100%;\n  `,\n  wrapper: css`\n    display: flex;\n    flex-direction: row;\n    flex-wrap: wrap;\n    justify-content: space-between;\n    padding: 16px;\n  `,\n  houseLink: (theme: Theme) => css`\n    display: flex;\n    align-items: center;\n    text-align: center;\n    justify-content: center;\n    background-color: ${theme.colors.primary[0]};\n    color: ${theme.colors.textWhite};\n    font-size: calc(100vw / 16);\n    transform: 1s background-color;\n    &:hover {\n      background-color: ${theme.colors.secondary[0]};\n    }\n  `,\n};\n\nfunction Houses() {\n  const houses = useSelector(selectHouses);\n  const error = useSelector(selectHousesError);\n\n  const dispatch = useDispatch();\n\n  React.useEffect(() => {\n    dispatch(fetchHouses());\n  });\n\n  return (\n    <div css={[styles.full, styles.wrapper]}>\n      {error\n        ? \"Error\"\n        : houses.map((house) => (\n            <ResponsiveSquare\n              innerCss={[styles.full]}\n              key={house._id}\n              width=\"25%\"\n            >\n              <span\n                css={withTheme([fontHarryP, styles.full, styles.houseLink])}\n              >\n                {house.name}\n              </span>\n            </ResponsiveSquare>\n          ))}\n    </div>\n  );\n}\n\nexport default Houses;\n","import { PayloadAction, createSlice } from \"@reduxjs/toolkit\";\n\nimport { RootState } from \"app/store\";\n\nimport { HouseName } from \"services/potterapi\";\nimport themes, { Theme, getThemeByHouse } from \"styles/themes\";\n\ninterface ThemeState {\n  value: Theme;\n}\n\nconst initialState: ThemeState = {\n  value: themes.default,\n};\n\nexport const themeSlice = createSlice({\n  name: \"currentTheme\",\n  initialState,\n  reducers: {\n    setTheme: (state, action: PayloadAction<HouseName>) => {\n      state.value = getThemeByHouse(action.payload);\n    },\n  },\n});\n\nexport const { setTheme } = themeSlice.actions;\n\nexport const selectTheme = (state: RootState) => state.theme.value;\n\nexport default themeSlice.reducer;\n","import { PayloadAction, createSlice } from \"@reduxjs/toolkit\";\n\nimport { Epic, ofType } from \"redux-observable\";\nimport { concat, defer, of } from \"rxjs\";\nimport { mergeMap, switchMapTo } from \"rxjs/operators\";\n\nimport { Dependencies, RootState } from \"app/store\";\n\nimport { setTheme } from \"features/theme/themeSlices\";\n\ninterface SortingHatState {\n  value: string;\n  isLoading: boolean;\n}\n\nconst initialState: SortingHatState = {\n  value: \"\",\n  isLoading: false,\n};\n\nexport const sortingHatSlice = createSlice({\n  name: \"sortingHat\",\n  initialState,\n  reducers: {\n    setSortingHat: (state, action: PayloadAction<string>) => {\n      state.value = action.payload;\n    },\n    setIsLoading: (state, action: PayloadAction<boolean>) => {\n      state.isLoading = action.payload;\n    },\n    setSortingHatAsync: () => {},\n  },\n});\n\nexport const {\n  setSortingHat,\n  setIsLoading,\n  setSortingHatAsync,\n} = sortingHatSlice.actions;\n\nexport const setSortingHatEpic: Epic = (\n  action$,\n  state$,\n  { potterapi }: Dependencies\n) =>\n  action$.pipe(\n    ofType(setSortingHatAsync.type),\n    switchMapTo(\n      concat(\n        of(setIsLoading(true)),\n        defer(() => potterapi.getSortingHat()).pipe(\n          mergeMap((value) =>\n            of(setSortingHat(value), setIsLoading(false), setTheme(value))\n          )\n        )\n      )\n    )\n  );\n\nexport const selectSortingHat = (state: RootState) => state.sortingHat.value;\nexport const selectSortingHatIsLoading = (state: RootState) =>\n  state.sortingHat.isLoading;\n\nexport default sortingHatSlice.reducer;\n","import { button, row, value } from \"styles/common\";\n\nexport default {\n  row,\n  value,\n  button,\n};\n","/** @jsx jsx */\nimport { css, jsx } from \"@emotion/core\";\nimport AutorenewIcon from \"@material-ui/icons/Autorenew\";\nimport { ReactNode } from \"react\";\n\nimport { rotating } from \"styles/common\";\n\ninterface LoadingContainerProps {\n  isLoading: boolean;\n  children: ReactNode;\n  minHeight?: string;\n}\n\nfunction LoadingContainer({\n  isLoading,\n  children,\n  minHeight,\n  ...props\n}: LoadingContainerProps) {\n  const wrapperStyle = css`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n  `;\n\n  return (\n    <div css={wrapperStyle} {...props}>\n      {isLoading ? <AutorenewIcon css={rotating} fontSize=\"large\" /> : children}\n    </div>\n  );\n}\n\nexport default LoadingContainer;\n","/** @jsx jsx */\nimport { css, jsx } from \"@emotion/core\";\nimport { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport {\n  selectSortingHat,\n  selectSortingHatIsLoading,\n  setSortingHatAsync,\n} from \"./sortingHatSlices\";\n\nimport styles from \"./sortingHatStyles\";\n\nimport LoadingContainer from \"components/LoadingContainer\";\nimport { fontHarryP } from \"styles/common\";\nimport { withTheme } from \"styles/themes\";\n\nfunction SortingHat() {\n  const dispatch = useDispatch();\n  const sortingHat = useSelector(selectSortingHat);\n  const isLoading = useSelector(selectSortingHatIsLoading);\n\n  useEffect(() => {\n    if (!sortingHat) {\n      dispatch(setSortingHatAsync());\n    }\n  }, [dispatch, sortingHat]);\n\n  const handleClick = () => dispatch(setSortingHatAsync());\n\n  return (\n    <div>\n      <div css={styles.row}>\n        <LoadingContainer\n          css={css`\n            min-height: 90px;\n          `}\n          isLoading={isLoading}\n        >\n          <span css={[styles.value, fontHarryP]}>{sortingHat}</span>\n        </LoadingContainer>\n      </div>\n      <div css={styles.row}>\n        <button css={withTheme([styles.button])} onClick={handleClick}>\n          Randomize\n        </button>\n      </div>\n    </div>\n  );\n}\n\nexport default SortingHat;\n","/** @jsx jsx */\n\nimport { css, jsx } from \"@emotion/core\";\nimport { ThemeProvider } from \"emotion-theming\";\nimport { useSelector } from \"react-redux\";\nimport { Redirect, Route, Switch } from \"react-router-dom\";\n\nimport Navigation from \"components/Navigation\";\nimport Houses from \"features/house/Houses\";\nimport SortingHat from \"features/sortingHat/SortingHat\";\nimport { selectTheme } from \"features/theme/themeSlices\";\nimport { fontHarryP } from \"styles/common\";\nimport { floating } from \"styles/keyframes\";\nimport { Theme } from \"styles/themes\";\n\nconst styles = {\n  App: (theme: Theme) => css`\n    text-align: center;\n    background-color: ${theme.colors.background};\n  `,\n  AppLogo: css`\n    label: AppLogo;\n    user-select: none;\n    pointer-events: none;\n    font-size: 5em;\n    @media (prefers-reduced-motion: no-preference) {\n      animation: ${floating} infinite 3s ease-in-out;\n    }\n    & > div + div {\n      margin-top: -24px;\n    }\n  `,\n  AppHeader: css`\n    label: AppHeader;\n    min-height: 100vh;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    font-size: calc(10px + 2vmin);\n  `,\n};\n\nfunction App() {\n  const theme = useSelector(selectTheme);\n  return (\n    <ThemeProvider theme={theme}>\n      <div css={styles.App}>\n        <header css={styles.AppHeader}>\n          {/* TODO: Divide top-fixed AppHeader with AppContent */}\n          <div css={[styles.AppLogo, fontHarryP]}>\n            <div>&#167;</div>\n            <div>Page</div>\n          </div>\n          <Navigation />\n          <Switch>\n            <Route path=\"/sorting-hat\">\n              <SortingHat />\n            </Route>\n            <Route path=\"/houses\">\n              <Houses />\n            </Route>\n            <Route path=\"*\">\n              <Redirect to=\"/sorting-hat\" />\n            </Route>\n          </Switch>\n        </header>\n      </div>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","import { combineReducers } from \"@reduxjs/toolkit\";\n\nimport { combineEpics } from \"redux-observable\";\n\nimport houseReducer, { fetchHousesEpic } from \"features/house/houseSlice\";\n\nimport sortingHatReducer, {\n  setSortingHatEpic,\n} from \"features/sortingHat/sortingHatSlices\";\nimport themeReducer from \"features/theme/themeSlices\";\n\nexport const rootEpic = combineEpics(setSortingHatEpic, fetchHousesEpic);\n\nexport const rootReducer = combineReducers({\n  sortingHat: sortingHatReducer,\n  theme: themeReducer,\n  house: houseReducer,\n});\n","import { compose } from \"@reduxjs/toolkit\";\nimport { applyMiddleware, createStore } from \"redux\";\nimport { createEpicMiddleware } from \"redux-observable\";\n\nimport { rootEpic, rootReducer } from \"./modules/root\";\nimport { Dependencies } from \"./store\";\n\nconst composeEnhancers =\n  (window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nexport default function configureStore(epicDependencies: Dependencies) {\n  const epicMiddleware = createEpicMiddleware({\n    dependencies: epicDependencies,\n  });\n\n  const store = createStore(\n    rootReducer,\n    composeEnhancers(applyMiddleware(epicMiddleware))\n  );\n\n  epicMiddleware.run(rootEpic);\n\n  return store;\n}\n","import { Action, ThunkAction } from \"@reduxjs/toolkit\";\n\nimport configureStore from \"./configureStore\";\n\nimport potterapi from \"services/potterapi\";\n\nexport const dependencies = { potterapi };\nexport const store = configureStore(dependencies);\n\nexport type Dependencies = typeof dependencies;\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppThunk<ReturnType = void> = ThunkAction<\n  ReturnType,\n  RootState,\n  unknown,\n  Action<string>\n>;\n","export type HouseName = \"Ravenclaw\" | \"Slytherin\" | \"Gryffindor\" | \"Hufflepuff\";\n\nexport type House = {\n  _id: string;\n  colors: string[];\n  founder: string;\n  headOfHouse: string;\n  houseGhost: string;\n  mascot: string;\n  members: string[];\n  name: HouseName;\n  school: string;\n  values: string[];\n};\n\nclass Potterapi {\n  #apiUrl = \"https://www.potterapi.com/v1\";\n  #apiKey: string;\n\n  constructor() {\n    this.#apiKey = process.env.REACT_APP_POTTER_API_KEY!;\n  }\n\n  async getSortingHat(): Promise<HouseName> {\n    const response = await fetch(`${this.#apiUrl}/sortingHat`);\n    if (response.ok) {\n      return response.json();\n    } else {\n      throw new Error();\n    }\n  }\n\n  async getHouses(): Promise<House[]> {\n    const response = await fetch(`${this.#apiUrl}/houses?key=${this.#apiKey}`);\n    if (response.ok) {\n      return response.json();\n    } else if (response.status >= 400 && response.status < 500) {\n      throw new Error(\"Bad Request\");\n    } else {\n      throw new Error();\n    }\n  }\n}\n\nexport default new Potterapi();\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import { css } from \"@emotion/core\";\n\nexport default css`\n  @font-face {\n    font-family: \"HarryP\";\n    src: url(\"./fonts/HarryP.ttf\") format(\"truetype\");\n  }\n\n  * {\n    box-sizing: border-box;\n  }\n\n  body {\n    margin: 0;\n    font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", \"Roboto\",\n      \"Oxygen\", \"Ubuntu\", \"Cantarell\", \"Fira Sans\", \"Droid Sans\",\n      \"Helvetica Neue\", sans-serif;\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n  }\n\n  code {\n    font-family: source-code-pro, Menlo, Monaco, Consolas, \"Courier New\",\n      monospace;\n  }\n\n  ul {\n    margin: 0;\n    padding: 0;\n  }\n\n  li {\n    list-style-type: none;\n  }\n\n  a {\n    color: inherit;\n    text-decoration: none;\n  }\n`;\n","import { Global } from \"@emotion/core\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport { Provider } from \"react-redux\";\nimport { HashRouter } from \"react-router-dom\";\n\nimport App from \"./App\";\nimport { store } from \"./app/store\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nimport global from \"styles/global\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n      <Global styles={global} />\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}